#!/usr/bin/perl

use strict;
use warnings;

my %valid_commands = (
  init => 'initialise a new foswiki', 
  install => 'install a foswiki module',
  list => 'list foswiki modules that can be installed',
);


#TODO: lowercase ARGV[0]
if ($#ARGV < 0 || !grep($ARGV[0], keys(%valid_commands))) {
  print "\nUSAGE:\n";
  foreach my $cmd (keys(%valid_commands)) {
    print "\t$cmd\t\t$valid_commands{$cmd}\n";
  }
  print "\n";
  exit -1;
}

if ($ARGV[0] eq 'init') {
  #make sure dir is empty
  my $ls = `ls`;
  #exit unless ($ls eq '');
  #git init
  `git init`;
  
    my $module = 'core';
  
  `git submodule add http://github.com/foswiki/$module`;
  `git submodule update --init`;
  #hook up svn 
  chdir($module);
  
  do_commands("git svn init http://svn.foswiki.org -T ./$module");
exit;
my %svn2git = (  
trunk             => 'master',
Release01x00      => 'release',
Release01x01      => 'Release01x01',
'foswiki.org'       => 'foswiki',
scratch           => 'scratch',
Release04x02      => 'Release04x02',
TWikiRelease04x02 => 'oldRelease04x02',
Release           => 'oldRelease'
);
        foreach my $branchdata ( keys(%svn2git) ) {
            if ( $branchdata ne 'trunk' ) {
                my $svnremoteref = "refs/remotes/$branchdata";
                my $gitremoteref = "origin/$svn2git{$branchdata}";
                my $svnurl =
"http:://svn.foswiki.org/$branchdata/$module";
                print "Aliasing $svnremoteref as $gitremoteref\n";
                do_commands("git update-ref $svnremoteref $gitremoteref");

                print "\tclone from SVN url $svnurl :$svnremoteref\n";
                do_commands("git config svn-remote.$branchdata.url $svnurl");
                do_commands("git config svn-remote.$branchdata.fetch :$svnremoteref");
            }
        }
#        print
#"Aliasing refs/remotes/$svninfo->{branches}->{trunk}->{path}/$module as refs/remotes/trunk &\n";
        print "Aliasing refs/remotes/trunk as origin/master\n";
        do_commands("git update-ref refs/remotes/trunk origin/master");
  
}

sub do_commands {

}
