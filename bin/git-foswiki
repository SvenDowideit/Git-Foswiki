#!/usr/bin/perl

use strict;
use warnings;

my %valid_commands = (
  init => 'initialise a new foswiki', 
  install => 'install a foswiki module',
#  list => 'list foswiki modules that can be installed',
#  update => 'update all submodules (from svn for now)',
);


#TODO: lowercase ARGV[0]
if ($#ARGV < 0 || !grep($ARGV[0], keys(%valid_commands))) {
  print "\nUSAGE:\n";
  foreach my $cmd (keys(%valid_commands)) {
    print "\t$cmd\t\t$valid_commands{$cmd}\n";
  }
  print "\n";
  exit -1;
}
my $command = shift @ARGV;

if ($command eq 'init') {
  #make sure dir is empty
  my $ls = `ls`;
  exit unless ($ls eq '');
  do_commands('git init');
  #TODO: want to git clone from a local repo if i can..
  do_commands('git clone git://github.com/foswiki/core.git');
  #TODO: is there a way for pseudo-install to then wire up the git svn links?
  do_commands('git submodule add ./core');
} elsif ($command eq 'install') {
  if ($#ARGV < 0) {
     print "\n\t please specify a module or alias to pseudo-install\n";
     exit;
  }
  chdir('core');
  my $output = do_commands('./pseudo-install.pl', @ARGV);
  my @modules = $output =~ m/^Processing ([A-Za-z0-9-]*?)$/gm;
  print "\n----\n$output\n----\n";
  print "\n===\n".join(', ', @modules)."\n===\n";
  chdir('..');
  foreach my $module (@modules) {
    do_commands("git submodule add ./$module");
  }
}

sub do_commands {
    my $command = join(' ', @_);

    print "RUN: $command \n";
    #local $ENV{PATH} = untaint( $ENV{PATH} );

    return `$command`;
}

1;
